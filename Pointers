// BASIC OF POINTERS

/*#include<iostream>
using namespace std ;
 int main()
{
    int i;
    cout<<&i<<endl;//print the address of i

    int *p=&i;//address of i is stored in p pointer.
    cout<<p<<endl;

    return 0;

}*/

//        POINTERS ARITHEMETICS

/*#include<iostream>
using namespace std;
int main()
{
    char c='C';
    short s='S';
    long l=34.09;
    char*mychar=&c;
    short*myshort=&s;
    long*mylong=&l;
    
    cout<<mychar<<endl;
    mychar = mychar+1;
    cout<<mychar<<endl;
   
    cout<<myshort<<endl;
    myshort++;
    cout<<myshort<<endl;
   
    cout<<mylong<<endl;
    mylong++;
    cout<<mylong<<endl;
    return 0;


}*/

/*#include<iostream>
using namespace std;
 int main()
 {
     int i=10;
     cout<<sizeof(i)<<endl;//print the size of int
     int *p= &i;

     cout<<p<<endl;
     *p++;
     cout<<p<<endl;
     
     *++p;//same as *(++p):increment pointer,
     //and dereference incremented address
     cout<<p<<endl;
     //p=34;//we can't change the address of value stored
     ++*p;//same as ++(*p):dereference pointer,and increment
     //the value it points to
     cout<<p<<endl;
     (*p)++;//dereference pointer,and post-­‐increment the value it 
     // points to
     cout<<p<<endl;

     return 0;
 }*/
